services:
  postgresql:
    image: postgres:15
    hostname: postgresql
    ports:
      - 5432:5432
    volumes:
      - ./platform/postgresql/init.sh:/docker-entrypoint-initdb.d/init.sh
      - ./platform/postgresql/data/:/var/lib/postgresql/data/pgdata/
    environment:
      - PGDATA=/var/lib/postgresql/data/pgdata
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_USER=${POSTGRES_USER}
      - MLFLOW_DB_USER=${MLFLOW_DB_USER}
      - MLFLOW_DB_PASSWORD=${MLFLOW_DB_PASSWORD}
      - DAGSTER_DB_USER=${DAGSTER_DB_USER}
      - DAGSTER_DB_PASSWORD=${DAGSTER_DB_PASSWORD}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 60s
      retries: 3

  jupyterlab:
    build:
      context: ./platform/jupyterlab
    environment:
      - MINIO_SERVER_ACCESS_KEY=${MINIO_SERVER_ACCESS_KEY}
      - MINIO_SERVER_SECRET_KEY=${MINIO_SERVER_SECRET_KEY}
    ports:
      - 8888:8888
    volumes:
      - ./platform/jupyterlab/:/home/jptr/app/
    command:
      - -c
      - "HOST_IP=$$(hostname -I | awk '{print $1}')
          && cd app && jupyter lab --ip $$HOST_IP "
    depends_on:
      postgresql:
        condition: service_healthy
      minio:
        condition: service_started

  minio:
    image: bitnami/minio:2024
    hostname: minio
    ports:
      - '9000:9000'
      - '9001:9001'
    environment:
      - MINIO_ROOT_USER=${MINIO_ROOT_USER}
      - MINIO_ROOT_PASSWORD=${MINIO_ROOT_PASSWORD}
      - MINIO_SERVER_ACCESS_KEY=${MINIO_SERVER_ACCESS_KEY}
      - MINIO_SERVER_SECRET_KEY=${MINIO_SERVER_SECRET_KEY}
    volumes:
      - minio-data:/bitnami/minio/data

  mlflow:
    image: bitnami/mlflow:2
    ports:
      - '8080:8080'
    volumes:
      - ./platform/mlflow:/app
    entrypoint: /bin/bash
    environment:
      - MLFLOW_DB_USER=${MLFLOW_DB_USER}
      - MLFLOW_DB_PASSWORD=${MLFLOW_DB_PASSWORD}
    command:
      - -c
      - "mlflow server --host 0.0.0.0 --port 8080
          --backend-store-uri postgresql+psycopg2://${MLFLOW_DB_USER}:${MLFLOW_DB_PASSWORD}@postgresql:5432/mlflow"
    depends_on:
      postgresql:
        condition: service_healthy
        restart: true

  dagster:
    build:
      context: ./platform/dagster
    hostname: dagster
    environment:
      - MINIO_SERVER_ACCESS_KEY=${MINIO_SERVER_ACCESS_KEY}
      - MINIO_SERVER_SECRET_KEY=${MINIO_SERVER_SECRET_KEY}
      - DAGSTER_PG_USERNAME=${DAGSTER_DB_USER}
      - DAGSTER_PG_PASSWORD=${DAGSTER_DB_PASSWORD}
      - DAGSTER_PG_HOST=postgresql
      - DAGSTER_PG_DB=dagster
      - LOCAL_COMPUTE_LOG_MANAGER_DIRECTORY=/opt/dagster/logs
    ports:
      - 3000:3000
    volumes:
      - ./platform/dagster/:/opt/dagster/app
    command:
      - -c
      - "dagster-webserver -h 0.0.0.0 -p 3000"
    depends_on:
      postgresql:
        condition: service_healthy
      minio:
        condition: service_started

volumes:
  minio-data:
    driver: local
    driver_opts:
      device: ./platform/minio/data
      type: none
      o: bind

  #deltalake:
